{"version":3,"file":"emotion-native-extended.cjs.production.min.js","sources":["../src/StyleSheet.tsx","../src/test-props.ts","../src/base.ts","../src/responsive.tsx","../src/index.ts"],"sourcesContent":["import EStyleSheet from 'react-native-extended-stylesheet';\nimport mediaQuery from 'css-mediaquery';\nimport { ReactNativeStyle, Stylesheet } from './types/StyleSheet';\n\nexport const findBreakpoints = (\n  emotionStyles: ReactNativeStyle,\n  remValue: number\n): Array<number> => {\n  const allMedia = Object.keys(emotionStyles).filter(\n    item => item.startsWith('@media') && item.includes('width')\n  );\n\n  const mediaValues = allMedia.reduce((acc, item) => {\n    const data: mediaQuery.AST = mediaQuery.parse(item);\n    data.forEach(item => {\n      item.expressions.forEach(exp => {\n        if (exp.value.includes('rem') || exp.value.includes('em')) {\n          acc.add(parseInt(exp.value) * remValue);\n        } else {\n          acc.add(parseInt(exp.value));\n        }\n      });\n    });\n    return acc;\n  }, new Set());\n\n  return (Array.from(mediaValues) as Array<number>).sort();\n};\n\nexport const StyleSheet: Stylesheet = EStyleSheet as any;\n\nStyleSheet.build();\n","import isPropValid from '@emotion/is-prop-valid';\n\nconst forwardableProps: Record<string, boolean> = {\n  // primitive props\n  abortPrefetch: true,\n  accessibilityComponentType: true,\n  accessibilityElementsHidden: true,\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityStates: true,\n  accessibilityTraits: true,\n  accessibilityViewIsModal: true,\n  accessible: true,\n  adjustsFontSizeToFit: true,\n  allowFontScaling: true,\n  blurRadius: true,\n  capInsets: true,\n  collapsable: true,\n  defaultSource: true,\n  disabled: true,\n  ellipsizeMode: true,\n  fadeDuration: true,\n  getSize: true,\n  onPress: true,\n  hitSlop: true,\n  importantForAccessibility: true,\n  loadingIndicatorSource: true,\n  Methods: true,\n  minimumFontScale: true,\n  nativeID: true,\n  needsOffscreenAlphaCompositing: true,\n  numberOfLines: true,\n  pointerEvents: true,\n  prefetch: true,\n  pressRetentionOffset: true,\n  queryCache: true,\n  removeClippedSubviews: true,\n  renderToHardwareTextureAndroid: true,\n  resizeMethod: true,\n  resizeMode: true,\n  resolveAssetSource: true,\n  selectable: true,\n  selectionColor: true,\n  shouldRasterizeIOS: true,\n  source: true,\n  suppressHighlighting: true,\n  testID: true,\n  textBreakStrategy: true,\n  children: true,\n  style: true,\n  maxWidth: false,\n};\n\nexport function testPickPropsOnPrimitiveComponent(prop: string) {\n  return forwardableProps[prop] === true || isPropValid(prop);\n}\n\nexport function testPickPropsOnOtherComponent(prop: string) {\n  return prop !== 'theme' && prop !== 'innerRef';\n}\n","import { StyleSheet } from './StyleSheet';\nimport { createStyled } from '@emotion/primitives-core';\nimport { CreateStyled } from './types/base';\nimport { withResponsive } from './responsive';\nimport { View, Text, Image } from 'react-native';\nimport {\n  testPickPropsOnPrimitiveComponent,\n  testPickPropsOnOtherComponent,\n} from './test-props';\n\nexport function getShouldForwardProp(component: React.ElementType) {\n  switch (component) {\n    case View:\n    case Text:\n    case Image: {\n      return testPickPropsOnPrimitiveComponent;\n    }\n  }\n  return testPickPropsOnOtherComponent;\n}\n\n/**\n * a function that returns a styled component which render styles in React Native\n */\nconst emotionStyled: CreateStyled = createStyled(StyleSheet, {\n  getShouldForwardProp,\n});\n\nconst styled: CreateStyled = (component: any, options: any) =>\n  emotionStyled(withResponsive<typeof component>(component), options);\n\nexport { styled };\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '@emotion/react';\nimport { useEffect } from 'react';\nimport { Dimensions, ScaledSize, Platform } from 'react-native';\nimport { useCallback } from 'react';\nimport { Theme, ReactNativeStyle, AnyStyle } from './types/StyleSheet';\nimport { StyleSheet, findBreakpoints } from './StyleSheet';\nimport memoize from 'lodash.memoize';\nimport { useMemo } from 'react';\nimport { useState } from 'react';\n\ntype AnyProps = {\n  style: AnyStyle;\n  [key: string]: any;\n} & any;\n\nfunction withResponsive<T extends React.ComponentClass<any>>(\n  Component: T\n): React.ForwardRefExoticComponent<\n  React.ComponentPropsWithoutRef<T> & {\n    ref?: React.Ref<InstanceType<T>>;\n  } & AnyProps\n>;\nfunction withResponsive<P extends AnyProps & { ref?: React.Ref<any> }>(\n  Component: React.ForwardRefExoticComponent<P & AnyProps>\n): React.ForwardRefExoticComponent<P & AnyProps>;\nfunction withResponsive<P = AnyProps>(\n  Component: React.FunctionComponent<P & AnyProps>\n): React.ForwardRefExoticComponent<P & AnyProps>;\nfunction withResponsive<P = AnyProps>(\n  Component: React.ComponentType<P & AnyProps>\n) {\n  // I don't know how to implement this without breaking out of the types.\n  // The overloads are ensuring correct usage, so we should be good?\n  const Responsive = React.forwardRef<typeof Component, P & AnyProps>(\n    ({ style, children, ...props }, ref) => {\n      const theme = useContext(ThemeContext) as Theme;\n\n      const getStylesheet = memoize(\n        (styles: any, _breakpoint: number | undefined) => {\n          return StyleSheet.create({\n            styles,\n          }).styles as any;\n        },\n        (_styles: any, _breakpoint: number | undefined) => breakpoint\n      );\n\n      const styles = useMemo<ReactNativeStyle>(() => {\n        if (!style) return {};\n\n        // Adds support for `screen` media queries to support Styled System\n        // @see https://github.com/styled-system/styled-system/pull/1133\n        // @see https://github.com/vitalets/react-native-extended-stylesheet/pull/132\n        const _styles = Object.keys(style).reduce<AnyStyle>(\n          (acc: AnyStyle, key) => {\n            acc[key.replace('screen', Platform.OS)] = style[key];\n            return acc;\n          },\n          {}\n        );\n\n        return _styles;\n      }, [style]);\n\n      const remValue = useMemo<number>(() => {\n        try {\n          return Number(StyleSheet.value('$rem'));\n        } catch {\n          return Number(theme?.rem || 16);\n        }\n      }, [theme]);\n\n      const breakpoints = useMemo(() => {\n        return findBreakpoints(styles, remValue);\n      }, [styles, remValue]);\n\n      const getBreakpoint = useCallback(\n        (width: number): number | undefined => {\n          return (breakpoints || []).find((item: number) => width < item);\n        },\n        [breakpoints]\n      );\n\n      const [breakpoint, setBreakpoint] = useState<number | undefined>(\n        getBreakpoint(Dimensions.get('window').width)\n      );\n\n      const onDimesionsChange = useCallback(\n        ({ window }: { window: ScaledSize; screen: ScaledSize }) => {\n          StyleSheet.build({\n            $theme: getBreakpoint(window.width),\n          });\n          setBreakpoint(getBreakpoint(window.width));\n        },\n        [getBreakpoint]\n      );\n\n      useEffect(() => {\n        if (style && breakpoints.length) {\n          Dimensions.addEventListener('change', onDimesionsChange);\n          return () =>\n            Dimensions.removeEventListener('change', onDimesionsChange);\n        } else {\n          return () => null;\n        }\n      }, [breakpoints]);\n\n      const stylesheet = getStylesheet(styles, breakpoint);\n      return (\n        <Component {...props} ref={ref} style={stylesheet}>\n          {children}\n        </Component>\n      );\n    }\n  );\n  return Responsive;\n}\n\nexport { withResponsive };\n","import * as RN from 'react-native';\n\nimport { createCss } from '@emotion/primitives-core';\n\nimport { StyleSheet } from './StyleSheet';\nimport { styled as createStyled } from './base';\nimport { CreateCSS, CreateStyled } from './types';\nimport { ReactNativeComponentNames } from './types/base';\nimport { getShouldForwardProp } from './base';\n\nconst css: CreateCSS = createCss(StyleSheet);\n\nconst components = [\n  'ActivityIndicator',\n  'Button',\n  'DatePickerIOS',\n  'DrawerLayoutAndroid',\n  'FlatList',\n  'Image',\n  'ImageBackground',\n  'KeyboardAvoidingView',\n  'ListView',\n  'Modal',\n  'NavigatorIOS',\n  'Picker',\n  'PickerIOS',\n  'ProgressBarAndroid',\n  'ProgressViewIOS',\n  'RecyclerViewBackedScrollView',\n  'RefreshControl',\n  'SafeAreaView',\n  'ScrollView',\n  'SectionList',\n  'SegmentedControlIOS',\n  'Slider',\n  'SnapshotViewIOS',\n  'StatusBar',\n  'SwipeableListView',\n  'Switch',\n  'SwitchIOS',\n  'TabBarIOS',\n  'Text',\n  'TextInput',\n  'ToolbarAndroid',\n  'TouchableHighlight',\n  'TouchableNativeFeedback',\n  'TouchableOpacity',\n  'TouchableWithoutFeedback',\n  'View',\n  'ViewPagerAndroid',\n];\n\nexport { css };\n\nconst styled: CreateStyled = components.reduce((acc: any, comp) => {\n  return Object.defineProperty(acc, comp, {\n    enumerable: true,\n    configurable: false,\n    get() {\n      const key = comp as ReactNativeComponentNames;\n      return createStyled(RN[key], {\n        shouldForwardProp: getShouldForwardProp(RN[key]),\n      });\n    },\n  });\n}, createStyled);\n\nexport default styled;\n"],"names":["StyleSheet","EStyleSheet","build","forwardableProps","abortPrefetch","accessibilityComponentType","accessibilityElementsHidden","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityStates","accessibilityTraits","accessibilityViewIsModal","accessible","adjustsFontSizeToFit","allowFontScaling","blurRadius","capInsets","collapsable","defaultSource","disabled","ellipsizeMode","fadeDuration","getSize","onPress","hitSlop","importantForAccessibility","loadingIndicatorSource","Methods","minimumFontScale","nativeID","needsOffscreenAlphaCompositing","numberOfLines","pointerEvents","prefetch","pressRetentionOffset","queryCache","removeClippedSubviews","renderToHardwareTextureAndroid","resizeMethod","resizeMode","resolveAssetSource","selectable","selectionColor","shouldRasterizeIOS","source","suppressHighlighting","testID","textBreakStrategy","children","style","maxWidth","testPickPropsOnPrimitiveComponent","prop","isPropValid","testPickPropsOnOtherComponent","getShouldForwardProp","component","View","Text","Image","emotionStyled","createStyled","styled","options","Component","React","forwardRef","ref","props","theme","useContext","ThemeContext","getStylesheet","memoize","styles","_breakpoint","create","_styles","breakpoint","useMemo","Object","keys","reduce","acc","key","replace","Platform","OS","remValue","Number","value","rem","breakpoints","emotionStyles","mediaValues","filter","item","startsWith","includes","mediaQuery","parse","forEach","expressions","exp","add","parseInt","Set","Array","from","sort","findBreakpoints","getBreakpoint","useCallback","width","find","useState","Dimensions","get","setBreakpoint","onDimesionsChange","window","$theme","useEffect","length","addEventListener","removeEventListener","stylesheet","css","createCss","comp","defineProperty","enumerable","configurable","RN","shouldForwardProp"],"mappings":"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"}